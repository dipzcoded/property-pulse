// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String                  @id @default(auto()) @map("_id") @db.ObjectId
  email     String                  @unique
  userName  String
  image     String
  bookmarks UserPropertyBookmarks[]
  createdAt DateTime                @default(now())
  updatedAt DateTime                @updatedAt
}

model UserPropertyBookmarks {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  owner      User     @relation(fields: [userId], references: [id])
  propertyId String   @db.ObjectId
  property   Property @relation(fields: [propertyId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([userId, propertyId])
}

model Property {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  type        String
  description String
  location    Location
  beds        Int
  baths       Int
  sqaureFeet  Int
  amenities   String[]
  rate        Rate
  sellerInfo  SellerInfo
  images      String[]

  isFeatured    Boolean                 @default(false)
  userBookmarks UserPropertyBookmarks[]
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt
}

type SellerInfo {
  name  String
  email String
  phone String
}

type Rate {
  nightly Int?
  weekly  Int?
  monthly Int?
}

type Location {
  street  String
  city    String
  state   String
  zipCode String
}
